#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>

int main() {
    int fd = open("example_file.txt", O_RDWR | O_CREAT, S_IRUSR | S_IWUSR);
    if (fd == -1) {
        perror("Error opening file");
        exit(EXIT_FAILURE);
    } else {
        printf("File opened successfully.\n");
    }
    const char *data = "Hello, this is a sample text.";
    ssize_t bytes_written = write(fd, data, strlen(data));
    if (bytes_written == -1) {
        perror("Error writing to file");
        close(fd); 
        exit(EXIT_FAILURE);
    } else {
        printf("Data written to file: %ld bytes\n", bytes_written);
    }
    off_t seek_offset = lseek(fd, 0, SEEK_SET);
    if (seek_offset == -1) {
        perror("Error seeking in file");
        close(fd);  
        exit(EXIT_FAILURE);
    } else {
        printf("File pointer moved to the beginning.\n");
    }
    char buffer[1024];
    ssize_t bytes_read = read(fd, buffer, sizeof(buffer));
    if (bytes_read == -1) {
        perror("Error reading from file");
        close(fd);  
        exit(EXIT_FAILURE);
    } else {
        buffer[bytes_read] = '\0';  
        printf("Data read from file:\n%s\n", buffer);
    }
    close(fd);
    struct stat file_info;
    if (stat("example_file.txt", &file_info) == -1) {
        perror("Error getting file information");
        exit(EXIT_FAILURE);
    } else {
        printf("File size: %ld bytes\n", file_info.st_size);
        printf("File permissions: %o\n", file_info.st_mode);
    }
    DIR *dir = opendir(".");
    if (dir == NULL) {
        perror("Error opening directory");
        exit(EXIT_FAILURE);
    } else {
        printf("Directory opened successfully.\n");
        struct dirent *dir_entry;
        printf("Contents of the directory:\n");
        while ((dir_entry = readdir(dir)) != NULL) {
            printf("%s\n", dir_entry->d_name);
        }
        closedir(dir);
    }

    return 0;
}
